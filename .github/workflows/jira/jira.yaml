on:
  push:
    branches:
    - '*'
    - '!feature/*'
    - '!hotfix/*'

name: Transition Issue for progress
jobs:
  test-transition-issue:
    name: Transition Issue
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Login
      uses: atlassian/gajira-login@master
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

    # プッシュされたコミットに記載された課題キーを抽出する
    - name: Find in commit messages
      id: find
      uses: atlassian/gajira-find-issue-key@master
      with:
        string: ${{ github.event.ref }}

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    # 課題キーが特定できればJiraに対してコメントを発行　
    - name: JIRA Comment
      uses: atlassian/gajira-comment@master
      # 課題キーが含まれていなければスルー
      if: ${{ steps.find.outputs.issue }}
      with:
        # 前のステップのアウトプットを参照
        issue: ${{ steps.find.outputs.issue }}
        comment: | 
          - push information
            name:        ${{ github.event.pusher.name }}
            repository: https://github.com/${{ github.event.repository.full_name }}
            branch:      ${{ steps.extract_branch.outputs.branch }}

    # 課題キーが特定できればJiraに対してラベルを発行　
    - name: JIRA Label
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
      # 課題キーが含まれていなければスルー
      if: ${{ steps.find.outputs.issue }}
      run: |
        curl -X PUT ${{ env.JIRA_BASE_URL }}rest/api/2/issue/${{ steps.find.outputs.issue }} \
        -H "Content-Type: application/json" \
        --user ${{ env.JIRA_USER_EMAIL }}:${{ env.JIRA_API_TOKEN }} \
        -d "{\"update\":{\"labels\":[{\"add\":\"env:${{ steps.extract_branch.outputs.branch }}\"}]}}" 
